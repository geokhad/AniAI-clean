from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from handlers.state import (
    active_ask,
    active_translators,
    active_imagers,
    active_analyzers,
    clear_user_state,
    active_tts,
)
from handlers.daily_english import start_daily_english
from handlers.spaced_repetition import start_spaced_vocab  # ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ

async def menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [
            InlineKeyboardButton("üß† –í–æ–ø—Ä–æ—Å", callback_data="gpt_help"),
            InlineKeyboardButton("üé® –ö–∞—Ä—Ç–∏–Ω–∫–∞", callback_data="image_help")
        ],
        [
            InlineKeyboardButton("üéº –ú—É–∑—ã–∫–∞", callback_data="music_help"),
            InlineKeyboardButton("üé¨ –í–∏–¥–µ–æ", callback_data="video_help")
        ],
        [
            InlineKeyboardButton("üìÑ –î–æ–∫—É–º–µ–Ω—Ç", callback_data="analyze_help"),
            InlineKeyboardButton("üåç –ü–µ—Ä–µ–≤–æ–¥", callback_data="translate")
        ],
        [
            InlineKeyboardButton("üéô –ì–æ–ª–æ—Å", callback_data="voice_mode"),
            InlineKeyboardButton("üó£ –û–∑–≤—É—á–∫–∞", callback_data="tts_mode")
        ],
        [
            InlineKeyboardButton("üìù Daily English", callback_data="daily_english"),
            InlineKeyboardButton("üß† VOA exam", callback_data="spaced_vocab")  # ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ
        ],
        [
            InlineKeyboardButton("üíé –ü—Ä–µ–º–∏—É–º", callback_data="premium_mode"),
            InlineKeyboardButton("ü§ù –ü–∞—Ä—Ç–Ω—ë—Ä–∫–∞", callback_data="affiliate")
        ],
        [
            InlineKeyboardButton("‚úçÔ∏è –û—Ç–∑—ã–≤", callback_data="feedback")
        ]
    ]
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é AniAI:",
        reply_markup=InlineKeyboardMarkup(keyboard),
    )

async def handle_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id

    if query.data in [
        "go_menu", "voice_mode", "tts_mode", "change_language", "premium_mode", "feedback"
    ]:
        clear_user_state(user_id)

    if query.data == "go_menu":
        intro = """üëã –†–∞–¥–∞ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! –Ø ‚Äî AniAI, —Ç–≤–æ—è –ø–æ–º–æ—â–Ω–∏—Ü–∞ –Ω–∞ –±–∞–∑–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π.

‚ú® –î–µ–ª–∞–π —Ç–æ, —á—Ç–æ —Ö–æ—á–µ—à—å, –∫–æ–≥–¥–∞ —Ö–æ—á–µ—à—å –∏ —Ç–∞–∫ –¥–æ–ª–≥–æ, –∫–∞–∫ —Ö–æ—á–µ—à—å.

–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:
‚Ä¢ üß† –û—Ç–≤–µ—á–∞—é –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏ –æ–±—ä—è—Å–Ω—è—é —Å–ª–æ–∂–Ω–æ–µ –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
‚Ä¢ üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ —Ç–≤–æ–µ–º—É –æ–ø–∏—Å–∞–Ω–∏—é
‚Ä¢ üéº –°–æ–∑–¥–∞—é –º—É–∑—ã–∫—É –ø–æ —Ç–≤–æ–∏–º –æ—â—É—â–µ–Ω–∏—è–º
‚Ä¢ üé¨ –í –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–µ ‚Äî –≥–µ–Ω–µ—Ä–∏—Ä—É—é –≤–∏–¥–µ–æ
‚Ä¢ üåç –ü–µ—Ä–µ–≤–æ–∂—É —Ç–µ–∫—Å—Ç—ã –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞—é —è–∑—ã–∫–∏
‚Ä¢ üéß –û–∑–≤—É—á–∏–≤–∞—é —Ç–µ–∫—Å—Ç –∂–µ–Ω—Å–∫–∏–º –≥–æ–ª–æ—Å–æ–º
‚Ä¢ üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∏ –ø–µ—Ä–µ—Å–∫–∞–∑—ã–≤–∞—é –¥–æ–∫—É–º–µ–Ω—Ç—ã
‚Ä¢ üß† –ü–æ–º–æ–≥–∞—é —É—á–∏—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Å –≥–æ–ª–æ—Å–æ–º –∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ–º

üëá –í—ã–±–µ—Ä–∏, —Å —á–µ–≥–æ —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å:"""
        await context.bot.send_message(chat_id=query.message.chat.id, text=intro)
        await menu(update, context)
        return

    if query.data == "gpt_help":
        active_ask.add(user_id)
        await context.bot.send_message(
            chat_id=query.message.chat.id,
            text="üß† –ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –æ–±—ä—è—Å–Ω–∏—Ç—å –≤—Å—ë —è—Å–Ω–æ –∏ –ø–æ –¥–µ–ª—É."
        )
        return

    if query.data == "image_help":
        active_imagers.add(user_id)
        await context.bot.send_message(
            chat_id=query.message.chat.id,
            text="üé® –û–ø–∏—à–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —É–≤–∏–¥–µ—Ç—å. –ù–∞–ø—Ä–∏–º–µ—Ä: ¬´–≥–æ—Ä–æ–¥ –Ω–∞ –æ–±–ª–∞–∫–∞—Ö –≤ —Å—Ç–∏–ª–µ —Å—Ç–∏–º–ø–∞–Ω–∫¬ª"
        )
        return

    if query.data == "music_help":
        await context.bot.send_message(chat_id=query.message.chat.id, text="üéº –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º—É–∑—ã–∫–∏ —Å–µ–π—á–∞—Å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")
        return

    if query.data == "video_help":
        await context.bot.send_message(chat_id=query.message.chat.id, text="üé¨ –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ —Å–µ–π—á–∞—Å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")
        return

    if query.data == "analyze_help":
        active_analyzers.add(user_id)
        await context.bot.send_message(
            chat_id=query.message.chat.id,
            text="üìÑ –ü—Ä–∏–∫—Ä–µ–ø–∏ –¥–æ–∫—É–º–µ–Ω—Ç (PDF, DOCX, TXT) ‚Äî –∏ —è —Å–¥–µ–ª–∞—é –∫—Ä–∞—Ç–∫–∏–π –ø–µ—Ä–µ—Å–∫–∞–∑ –∏–ª–∏ –∞–Ω–∞–ª–∏–∑."
        )
        return

    if query.data == "translate":
        active_translators.add(user_id)
        await context.bot.send_message(
            chat_id=query.message.chat.id,
            text="üåç –í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç ‚Äî —è –ø–µ—Ä–µ–≤–µ–¥—É –µ–≥–æ –Ω–∞ –Ω—É–∂–Ω—ã–π —è–∑—ã–∫."
        )
        return

    if query.data == "tts_mode":
        active_tts.add(user_id)
        await context.bot.send_message(
            chat_id=query.message.chat.id,
            text="üó£ –í–≤–µ–¥–∏ —Ñ—Ä–∞–∑—É ‚Äî —è –æ–∑–≤—É—á—É –µ—ë —Å–≤–æ–∏–º –≥–æ–ª–æ—Å–æ–º."
        )
        return

    if query.data == "voice_mode":
        await context.bot.send_message(
            chat_id=query.message.chat.id,
            text="üéô –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –ø–æ–π–º—É, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å ü§ñ"
        )
        return

    if query.data == "daily_english":
        await start_daily_english(update, context)
        return

    if query.data == "spaced_vocab":
        await start_spaced_vocab(update, context)
        return

    if query.data == "affiliate":
        await context.bot.send_message(
            chat_id=query.message.chat.id,
            text="ü§ù –ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã! –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ ‚Äî @AniAI_supportbot"
        )
        return

    responses = {
        "change_language": "üåê –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.",
        "premium_mode": "üíé –ü—Ä–µ–º–∏—É–º —Ä–µ–∂–∏–º —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è!",
        "feedback": "üì¨ –ù–∞–ø–∏—à–∏ —Å–≤–æ—ë –º–Ω–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏–µ: @AniAI_supportbot"
    }

    if query.data in responses:
        await context.bot.send_message(
            chat_id=query.message.chat.id,
            text=responses[query.data]
        )
