from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

async def menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üß† GPT-–ø–æ–º–æ—â—å", callback_data="gpt_help")],
        [InlineKeyboardButton("üìö –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤", callback_data="examples")],
        [InlineKeyboardButton("üéô –ì–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º", callback_data="voice_mode")],
        [InlineKeyboardButton("üåê –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —è–∑—ã–∫ (–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ)", callback_data="change_language")],
        [InlineKeyboardButton("üíé –ü—Ä–µ–º–∏—É–º —Ä–µ–∂–∏–º", callback_data="premium_mode")],
        [InlineKeyboardButton("‚úçÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data="feedback")],
    ]
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é AniAI:",
        reply_markup=InlineKeyboardMarkup(keyboard),
    )

async def handle_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "go_menu":
        intro = """üéâ –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª AniAI ‚Äî –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –≤ —Ä–∞–±–æ—Ç–µ,
—É—á—ë–±–µ –∏ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω–∏!

–ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥:
‚Ä¢ –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –±—É–¥—É—â–µ–≥–æ
‚Ä¢ –ü–µ—Ä–µ–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –Ω–∞ —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
‚Ä¢ –ù–∞–ø–∏—à–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞

üëá –ù–∏–∂–µ –¥–æ—Å—Ç—É–ø–Ω–æ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        await context.bot.send_message(chat_id=query.message.chat.id, text=intro)
        await menu(update, context)
        return

    responses = {
        "gpt_help": """üß† –ß—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É:
/ask –¢–≤–æ–π –≤–æ–ø—Ä–æ—Å

–ù–∞–ø—Ä–∏–º–µ—Ä:
/ask –û–±—ä—è—Å–Ω–∏, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ñ–æ—Ç–æ—Å–∏–Ω—Ç–µ–∑ –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏""",
        "examples": """üìö –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:
‚Ä¢ –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –Ω–∞ –ú–∞—Ä—Å–µ –≤ —Å—Ç–∏–ª–µ –∫–∏–±–µ—Ä–ø–∞–Ω–∫
‚Ä¢ –°–æ–∑–¥–∞–π –º—É–∑—ã–∫—É –≤ —Å—Ç–∏–ª–µ lo-fi –¥–ª—è —Ä–∞–±–æ—Ç—ã
‚Ä¢ –û–±—ä—è—Å–Ω–∏ –∫–≤–∞–Ω—Ç–æ–≤—É—é –∑–∞–ø—É—Ç–∞–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
‚Ä¢ –ü–µ—Ä–µ–≤–µ–¥–∏ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π: "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å"

üëâ –ò—Å–ø–æ–ª—å–∑—É–π /ask –ø–µ—Ä–µ–¥ –≤–æ–ø—Ä–æ—Å–æ–º""",
        "voice_mode": "üéô –ì–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...",
        "change_language": "üåê –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ–∑–∂–µ. –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫.",
        "premium_mode": "üíé –ü—Ä–µ–º–∏—É–º-—Ä–µ–∂–∏–º –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.",
        "feedback": """üì¨ –û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –∑–¥–µ—Å—å: @AniAI_supportbot
–ú—ã —á–∏—Ç–∞–µ–º –∫–∞–∂–¥—ã–π –æ—Ç–∫–ª–∏–∫!"""
    }

    response = responses.get(query.data)
    if response:
        await context.bot.send_message(chat_id=query.message.chat.id, text=response)
    else:
        await context.bot.send_message(chat_id=query.message.chat.id, text="‚öôÔ∏è –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")
