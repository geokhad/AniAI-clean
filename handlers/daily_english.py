from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from questions import questions
import random

# –°–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω—è—Ç—Å—è —Ç–µ–∫—É—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
active_quizzes = {}

# üìò –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–∞
async def start_daily_english(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    if query:
        await query.answer()
        user_id = query.from_user.id
        question = random.choice(questions)
        active_quizzes[user_id] = question

        keyboard = [[InlineKeyboardButton(opt, callback_data=f"daily_answer|{opt}")] for opt in question["options"]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await query.message.reply_text(
            f"üìù <b>Question 1:</b>\n{question['question']}\n\nüí¨ Example: {question['example']}",
            parse_mode="HTML",
            reply_markup=reply_markup
        )

# üìò –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞
async def handle_daily_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    data = query.data.split("|", 1)

    if query.data == "daily_next":
        await start_daily_english(update, context)
        return

    if len(data) != 2:
        await query.message.reply_text("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞.")
        return

    selected = data[1]
    question = active_quizzes.get(user_id)

    if not question:
        await query.message.reply_text("‚ö†Ô∏è –í–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏ –∑–∞–Ω–æ–≤–æ —á–µ—Ä–µ–∑ /menu.")
        return

    correct = question["answer"]
    explanation = question.get("explanation", "")

    if selected == correct:
        reply = f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!\n\nüìò –û–±—ä—è—Å–Ω–µ–Ω–∏–µ: {explanation}"
    else:
        reply = f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: <b>{correct}</b>\n\nüìò –û–±—ä—è—Å–Ω–µ–Ω–∏–µ: {explanation}"

    await query.message.reply_text(reply, parse_mode="HTML")

    # –ö–Ω–æ–ø–∫–∞ –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
    next_button = InlineKeyboardMarkup([
        [InlineKeyboardButton("‚û°Ô∏è Next Question", callback_data="daily_next")]
    ])
    await query.message.reply_text("‚û°Ô∏è –ì–æ—Ç–æ–≤ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É?", reply_markup=next_button)

    # –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π –≤–æ–ø—Ä–æ—Å
    del active_quizzes[user_id]
