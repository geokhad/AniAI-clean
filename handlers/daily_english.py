import random
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from utils.questions import questions

# –°–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –∑–∞ —Ä–∞–∑
DAILY_QUESTION_COUNT = 3

# –•—Ä–∞–Ω–∏–º –∞–∫—Ç–∏–≤–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
user_daily_questions = {}

# –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
async def start_daily_english(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    selected = random.sample(questions, DAILY_QUESTION_COUNT)
    user_daily_questions[user_id] = selected

    await send_question(update, context, user_id, question_index=0)


async def send_question(update, context, user_id, question_index):
    question = user_daily_questions[user_id][question_index]
    options = question['options']

    buttons = [[InlineKeyboardButton(opt, callback_data=f"daily_{question_index}_{opt}")] for opt in options]
    
    text = f"üìù <b>Question {question_index + 1}:</b>\n{question['question']}"

    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text=text,
        reply_markup=InlineKeyboardMarkup(buttons),
        parse_mode="HTML"
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def handle_daily_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id

    data = query.data  # format: daily_0_to continue
    _, q_index_str, selected = data.split("_", 2)
    q_index = int(q_index_str)

    question = user_daily_questions.get(user_id, [])[q_index]
    correct = question['answer']

    if selected == correct:
        feedback = "‚úÖ <b>–ü—Ä–∞–≤–∏–ª—å–Ω–æ!</b>"
    else:
        feedback = f"‚ùå <b>–ù–µ–≤–µ—Ä–Ω–æ.</b> –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: <i>{correct}</i>"

    explanation = f"\nüí° {question['explanation']}\nüìö –ü—Ä–∏–º–µ—Ä: {question['example']}"
    await query.edit_message_text(text=feedback + explanation, parse_mode="HTML")

    # –û—Ç–ø—Ä–∞–≤–∏–º —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å, –µ—Å–ª–∏ –µ—Å—Ç—å
    if q_index + 1 < DAILY_QUESTION_COUNT:
        await send_question(update, context, user_id, q_index + 1)
    else:
        await context.bot.send_message(chat_id=query.message.chat.id, text="üéâ –ì–æ—Ç–æ–≤–æ! –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –∑–∞–≤—Ç—Ä–∞ –∑–∞ –Ω–æ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏.")
