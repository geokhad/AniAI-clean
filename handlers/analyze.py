import os
from telegram import Update
from telegram.ext import ContextTypes, MessageHandler, filters
from openai import OpenAI
import fitz  # PyMuPDF
import docx

client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

def read_pdf(file_path):
    text = ""
    with fitz.open(file_path) as doc:
        for page in doc:
            text += page.get_text()
    return text

def read_docx(file_path):
    doc = docx.Document(file_path)
    return "\n".join([para.text for para in doc.paragraphs])

def read_txt(file_path):
    with open(file_path, "r", encoding="utf-8") as f:
        return f.read()

async def analyze(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message.document:
        await update.message.reply_text("üìé –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏ –¥–æ–∫—É–º–µ–Ω—Ç (PDF, DOCX –∏–ª–∏ TXT).")
        return

    file = update.message.document
    file_name = file.file_name
    file_ext = os.path.splitext(file_name)[-1].lower()

    if file_ext not in [".pdf", ".docx", ".txt"]:
        await update.message.reply_text("‚ùå –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ PDF, DOCX –∏ TXT.")
        return

    new_file = await file.get_file()
    file_path = f"/tmp/{file.file_unique_id}{file_ext}"
    await new_file.download_to_drive(file_path)

    await update.message.reply_text("‚è≥ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç...")

    try:
        if file_ext == ".pdf":
            text = read_pdf(file_path)
        elif file_ext == ".docx":
            text = read_docx(file_path)
        else:
            text = read_txt(file_path)
    except Exception as e:
        await update.message.reply_text(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        return

    if len(text) > 3000:
        await update.message.reply_text("‚ö†Ô∏è –î–æ–∫—É–º–µ–Ω—Ç —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∫—Ä–∞—Ç–∏—Ç–µ –¥–æ 3000 —Å–∏–º–≤–æ–ª–æ–≤.")
        return

    prompt = update.message.caption or "–í—ã–¥–µ–ª–∏ –≥–ª–∞–≤–Ω—ã–µ –∏–¥–µ–∏ –∏ —Å–¥–µ–ª–∞–π –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ:"

    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫, –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç—ã."},
                {"role": "user", "content": f"{prompt}\n{text}"}
            ]
        )
        result = response.choices[0].message.content
        await update.message.reply_text(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:\n{result}")
    except Exception as e:
        await update.message.reply_text(f"–û—à–∏–±–∫–∞ OpenAI: {e}")
