import os
import logging
import asyncio
from dotenv import load_dotenv
from aiohttp import web
from telegram import Update, BotCommand
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    MessageHandler,
    ContextTypes,
    filters,
)
import nest_asyncio

# –ò–º–ø–æ—Ä—Ç—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
from handlers.chat import handle_ask
from handlers.start import start
from handlers.menu import menu, handle_button
from handlers.translate import translate
from handlers.image import generate_image
from handlers.analyze import analyze
from handlers.text import handle_text_message  # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤
from handlers.state import clear_user_state  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º)

# –õ–æ–≥–∏
logging.basicConfig(level=logging.INFO)
nest_asyncio.apply()
load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = os.getenv("TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")
PORT = int(os.environ.get("PORT", 8080))
HOST = "0.0.0.0"

# –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram
app = ApplicationBuilder().token(TOKEN).build()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("menu", menu))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤
app.add_handler(CommandHandler("ask", handle_ask))            # —Å—Ç–∞—Ä—ã–π —Ä–µ–∂–∏–º GPT
app.add_handler(CommandHandler("translate", translate))       # —Å—Ç–∞—Ä—ã–π —Ä–µ–∂–∏–º –ø–µ—Ä–µ–≤–æ–¥–∞
app.add_handler(CommandHandler("image", generate_image))      # —Å—Ç–∞—Ä—ã–π —Ä–µ–∂–∏–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
app.add_handler(CallbackQueryHandler(handle_button))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ ‚Äî PDF, DOCX, TXT
app.add_handler(MessageHandler(filters.Document.ALL, analyze))

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞ ‚Äî GPT, –ø–µ—Ä–µ–≤–æ–¥, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text_message))

# Webhook-—Å–µ—Ä–≤–µ—Ä
async def handle_telegram(request):
    data = await request.json()
    update = Update.de_json(data, app.bot)
    await app.process_update(update)
    return web.Response(text="OK")

async def handle_check(request):
    return web.Response(text="AniAI on Railway ‚úÖ")

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async def main():
    await app.initialize()

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è Telegram
    await app.bot.set_my_commands([
        BotCommand("menu", "üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é AniAI")
    ])

    await app.bot.set_webhook(url=WEBHOOK_URL)
    await app.start()

    # HTTP-—Å–µ—Ä–≤–µ—Ä
    web_app = web.Application()
    web_app.router.add_post("/", handle_telegram)
    web_app.router.add_get("/", handle_check)

    runner = web.AppRunner(web_app)
    await runner.setup()
    site = web.TCPSite(runner, HOST, PORT)
    await site.start()

    print(f"‚úÖ AniAI —Å–ª—É—à–∞–µ—Ç Webhook –Ω–∞ {WEBHOOK_URL}")
    await asyncio.Event().wait()

if __name__ == "__main__":
    asyncio.run(main())
