import os
import logging
import asyncio
from dotenv import load_dotenv
from telegram.ext import ApplicationBuilder, CommandHandler
from ai.chat import handle_ask
from handlers.start import start
import nest_asyncio

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(level=logging.INFO)

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ç—á–∞ –¥–ª—è Jupyter / Render
nest_asyncio.apply()

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ß—Ç–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏ –∞–¥—Ä–µ—Å–∞ Webhook
TOKEN = os.getenv("TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")  # –ù–∞–ø—Ä–∏–º–µ—Ä: https://aniai.onrender.com

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞
PORT = int(os.environ.get("PORT", 10000))
HOST = "0.0.0.0"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = ApplicationBuilder().token(TOKEN).build()

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("ask", handle_ask))

async def main():
    print("üåê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Webhook...")
    await app.initialize()
    await app.bot.set_webhook(url=WEBHOOK_URL)
    await app.start()
    print("‚úÖ AniAI –∑–∞–ø—É—â–µ–Ω–∞ —á–µ—Ä–µ–∑ Webhook.")
    await app.updater.start_polling()  # <- –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å, –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è polling
    await app.updater.idle()

# –ó–∞–ø—É—Å–∫–∞–µ–º
if __name__ == "__main__":
    asyncio.run(main())

