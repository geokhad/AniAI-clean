import os
import logging
import asyncio
from dotenv import load_dotenv
from telegram import Update, Bot
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes
from aiohttp import web

from ai.chat import handle_ask
from handlers.start import start
from handlers.menu import menu
import nest_asyncio

# –õ–æ–≥–∏
logging.basicConfig(level=logging.INFO)
nest_asyncio.apply()
load_dotenv()

TOKEN = os.getenv("TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")
PORT = int(os.environ.get("PORT", 8080))
HOST = "0.0.0.0"

# –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = ApplicationBuilder().token(TOKEN).build()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("ask", handle_ask))
app.add_handler(CommandHandler("menu", menu))

# üîß –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ (–≤—ã–Ω–µ—Å–µ–Ω –æ—Ç–¥–µ–ª—å–Ω–æ ‚Äî –Ω–µ –≤–Ω—É—Ç—Ä–∏ add_handler)
async def handle_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "go_menu":
        text = (
            "üéâ –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª <b>AniAI</b> ‚Äî –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –≤ —Ä–∞–±–æ—Ç–µ, —É—á—ë–±–µ –∏ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω–∏!\n\n"
            "–° AniAI —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –±—ã—Å—Ç—Ä—ã–π –∏ –ø—Ä–æ—Å—Ç–æ–π –¥–æ—Å—Ç—É–ø –∫ —Å–∞–º—ã–º –º–æ—â–Ω—ã–º –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º –ø—Ä—è–º–æ –≤ Telegram. "
            "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å ‚Äî –∏ –±–æ—Ç —Å–∞–º —Ä–∞–∑–±–µ—Ä—ë—Ç—Å—è, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ:\n\n"
            "<b>‚ú® –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:</b>\n"
            "‚Ä¢ –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –Ω–∞ –ú–∞—Ä—Å–µ –≤ —Å—Ç–∏–ª–µ –∫–∏–±–µ—Ä–ø–∞–Ω–∫\n"
            "‚Ä¢ –°–¥–µ–ª–∞–π –∫—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏ PDF –∏–ª–∏ —Ç–µ–∫—Å—Ç)\n"
            "‚Ä¢ –ù–∞–ø–∏—à–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–ª–ª–µ–≥–µ –≤ —à—É—Ç–æ—á–Ω–æ–º —Å—Ç–∏–ª–µ\n"
            "‚Ä¢ –°–æ–∑–¥–∞–π –º—É–∑—ã–∫—É –≤ —Å—Ç–∏–ª–µ lo-fi –¥–ª—è —Ä–∞–±–æ—Ç—ã\n"
            "‚Ä¢ –ü–µ—Ä–µ–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π\n\n"
            "<b>–ß—Ç–æ —É–º–µ–µ—Ç AniAI:</b>\n"
            "1. üìò –û–±—ä—è—Å–Ω—è–µ—Ç —Å–ª–æ–∂–Ω—ã–µ —Ç–µ–º—ã –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º\n"
            "2. ‚úçÔ∏è –ü–æ–º–æ–≥–∞–µ—Ç –ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç—ã, –ø–∏—Å—å–º–∞, –æ–ø–∏—Å–∞–Ω–∏—è\n"
            "3. üåç –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –Ω–∞ –ª—é–±–æ–π —è–∑—ã–∫\n"
            "4. üñº –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n"
            "5. üéµ –ü–∏—à–µ—Ç –º—É–∑—ã–∫—É –ø–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ\n"
            "6. üé• –°–æ–∑–¥–∞—ë—Ç –∫–æ—Ä–æ—Ç–∫–∏–µ –≤–∏–¥–µ–æ –ø–æ —Å—Ü–µ–Ω–∞—Ä–∏—é\n"
            "7. üìÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –≤—ã–¥–µ–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ\n"
            "8. üîó –ò—â–µ—Ç –∏–¥–µ–∏, –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ\n\n"
            "ü§ñ AniAI –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–∞–º—ã–µ –ø–µ—Ä–µ–¥–æ–≤—ã–µ –º–æ–¥–µ–ª–∏ ‚Äî GPT-4o, Ideogram, Suno –∏ –¥—Ä—É–≥–∏–µ. "
            "–ü–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤ —Ç–µ—á–µ–Ω–∏–µ <b>50 –¥–Ω–µ–π</b>.\n\n"
            "üí¨ –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ —Ö–æ—á–µ—à—å –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ ‚Äî –Ω–∞–ø–∏—à–∏ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: @AniAI_supportbot"
        )

        await context.bot.send_message(
            chat_id=query.message.chat.id,
            text=text,
            parse_mode="HTML"
        )

        # –ø–µ—Ä–µ—Ö–æ–¥ –≤ –º–µ–Ω—é
        await context.bot.send_message(chat_id=query.message.chat.id, text="/menu")

# üëá –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–Ω–æ–ø–æ–∫
app.add_handler(CallbackQueryHandler(handle_button))

# Webhook endpoint
async def handle_telegram(request):
    data = await request.json()
    update = Update.de_json(data, app.bot)
    await app.process_update(update)
    return web.Response(text="OK")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
async def handle_check(request):
    return web.Response(text="AniAI on Railway ‚úÖ")

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
async def main():
    await app.initialize()
    await app.bot.set_webhook(url=WEBHOOK_URL)
    await app.start()

    web_app = web.Application()
    web_app.router.add_post("/", handle_telegram)
    web_app.router.add_get("/", handle_check)

    runner = web.AppRunner(web_app)
    await runner.setup()
    site = web.TCPSite(runner, HOST, PORT)
    await site.start()

    print(f"‚úÖ AniAI —Å–ª—É—à–∞–µ—Ç Webhook –Ω–∞ {WEBHOOK_URL}")
    await asyncio.Event().wait()

if __name__ == "__main__":
    asyncio.run(main())
